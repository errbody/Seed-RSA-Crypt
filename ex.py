public_key_der = [
  0x30, 0x82, 0x02, 0x0A, 0x02, 0x82, 0x02, 0x01, 0x00, 0xAD, 
  0x8E, 0x46, 0x21, 0xC1, 0x6C, 0xBD, 0xFB, 0x9D, 0xB0, 0x76, 
  0xD1, 0x11, 0xFD, 0x3D, 0x97, 0xAC, 0x29, 0x1D, 0xA4, 0x84, 
  0x13, 0x59, 0x24, 0xC4, 0xA2, 0xE6, 0xBD, 0xD8, 0xC4, 0x56, 
  0x22, 0x9B, 0x4A, 0x54, 0x43, 0x7E, 0x1C, 0x39, 0x51, 0x86, 
  0x5C, 0x57, 0xBB, 0x10, 0xD9, 0x74, 0xBD, 0x81, 0x72, 0x12, 
  0xB9, 0x2A, 0x87, 0x31, 0xDA, 0x3C, 0x4F, 0x69, 0xE6, 0xDA, 
  0x0C, 0x01, 0x4A, 0x40, 0x96, 0xC9, 0xF4, 0xA0, 0xE2, 0xBD, 
  0xCE, 0x3D, 0x93, 0x79, 0xF9, 0x76, 0x8B, 0x04, 0x2C, 0x16, 
  0xB0, 0xDC, 0xAA, 0xD0, 0x5E, 0x3B, 0x6A, 0xC9, 0xA3, 0x53, 
  0x9C, 0x90, 0xA5, 0xE8, 0xD4, 0xED, 0x7E, 0x2A, 0xFD, 0x4B, 
  0x9A, 0x14, 0x9B, 0x30, 0x38, 0xAB, 0xD7, 0x78, 0x91, 0x20, 
  0xAD, 0x20, 0x8A, 0x36, 0x65, 0x44, 0x43, 0xB5, 0x77, 0xAB, 
  0xBC, 0x7B, 0x02, 0x93, 0xC4, 0xA7, 0x0C, 0x09, 0x9D, 0xD5, 
  0x05, 0x09, 0x5C, 0xAD, 0xD3, 0x27, 0xD2, 0x91, 0x9E, 0x29, 
  0xB1, 0xED, 0x8F, 0x59, 0x08, 0xB1, 0xE2, 0x15, 0x8F, 0x39, 
  0x7B, 0x74, 0x64, 0x94, 0x22, 0x01, 0x52, 0xCC, 0xF1, 0x6D, 
  0x59, 0x47, 0x26, 0x1A, 0xE2, 0xE0, 0xBD, 0xC4, 0x07, 0x53, 
  0x69, 0xBD, 0x25, 0xF4, 0xA3, 0xC8, 0xEE, 0xB2, 0x93, 0xB3, 
  0x39, 0xE0, 0x37, 0x18, 0x22, 0x2F, 0xF8, 0x9F, 0xA8, 0xFF, 
  0xD0, 0x86, 0x4F, 0x56, 0x44, 0x94, 0xA5, 0x00, 0x07, 0x45, 
  0x81, 0x82, 0x98, 0x5F, 0x9D, 0x16, 0xC4, 0xFE, 0xFF, 0x2F, 
  0x77, 0x63, 0xD4, 0x9E, 0x37, 0x6D, 0xCB, 0xDE, 0x5A, 0x16, 
  0xF7, 0xEC, 0xD5, 0x23, 0x25, 0xDC, 0x20, 0x0F, 0x8D, 0xEE, 
  0x54, 0xE1, 0xBA, 0xF5, 0x3B, 0x1F, 0xD1, 0x42, 0x85, 0xB9, 
  0x21, 0xE7, 0xAA, 0xBF, 0x30, 0x08, 0x93, 0x61, 0xDC, 0x89, 
  0xAA, 0x22, 0x6C, 0x3F, 0x08, 0xE5, 0xF1, 0x7E, 0x2D, 0xD3, 
  0x6B, 0x90, 0x11, 0x7A, 0x61, 0xB3, 0x35, 0xC8, 0x94, 0xBA, 
  0x96, 0x72, 0xD3, 0x4F, 0x82, 0xAC, 0x3A, 0xAC, 0xFC, 0xF4, 
  0xB9, 0x50, 0x9A, 0x95, 0x59, 0x4B, 0x7C, 0x0D, 0x68, 0x22, 
  0x4E, 0xB4, 0xCC, 0xF5, 0x71, 0x32, 0x27, 0xA9, 0xD1, 0xB1, 
  0x18, 0xA7, 0xFB, 0x47, 0x9D, 0x45, 0x02, 0x92, 0xF8, 0x2B, 
  0x22, 0xCA, 0x44, 0x53, 0xDD, 0x64, 0xF5, 0x16, 0xA3, 0xCC, 
  0xF4, 0xB2, 0xBF, 0x45, 0x5A, 0xDA, 0x78, 0x1C, 0x85, 0xF1, 
  0x00, 0x82, 0x66, 0x3C, 0x36, 0x37, 0xE0, 0x60, 0xF5, 0x77, 
  0x94, 0x42, 0x30, 0x63, 0x85, 0x5E, 0xCD, 0xD3, 0x9D, 0x0F, 
  0x0E, 0x64, 0x1F, 0x91, 0xD5, 0x6D, 0xA4, 0xC1, 0x62, 0x9F, 
  0xB7, 0xD3, 0x79, 0xDF, 0x6E, 0x92, 0x32, 0xA3, 0x15, 0x56, 
  0x5D, 0x5C, 0x96, 0x49, 0x2E, 0x60, 0x05, 0x9E, 0x74, 0xCB, 
  0xD7, 0x2D, 0xC1, 0xF0, 0x3F, 0x25, 0x44, 0x07, 0x64, 0x3E, 
  0x4E, 0x89, 0x7A, 0x29, 0xFF, 0x32, 0x84, 0x22, 0xA2, 0x60, 
  0xEC, 0xC8, 0x3D, 0x38, 0xB4, 0xEE, 0xC5, 0x52, 0x1C, 0x09, 
  0x07, 0x2D, 0x47, 0xA0, 0xA1, 0xAC, 0x59, 0xC4, 0xDD, 0x70, 
  0xBE, 0xB0, 0x3C, 0x49, 0x18, 0x82, 0x56, 0x51, 0x8B, 0x1C, 
  0x3D, 0x5B, 0x6B, 0x10, 0x92, 0x45, 0xF7, 0x6D, 0xDA, 0x47, 
  0xC0, 0x5D, 0x46, 0x83, 0x1A, 0xD4, 0x3B, 0xE2, 0x54, 0x09, 
  0xD1, 0x53, 0xD5, 0x2A, 0xAB, 0x51, 0x87, 0xA5, 0x31, 0x18, 
  0x09, 0xFE, 0xBE, 0x09, 0x13, 0x8B, 0xB7, 0x8B, 0xB6, 0x1A, 
  0x5F, 0x37, 0xB7, 0x80, 0x0C, 0xBD, 0x16, 0x9C, 0xAA, 0xEA, 
  0xC1, 0xC8, 0x3E, 0xEC, 0xC6, 0x6D, 0xB1, 0x92, 0x2C, 0xFE, 
  0xDF, 0x5B, 0x15, 0x7B, 0xFB, 0xFF, 0x63, 0x95, 0xE5, 0x66, 
  0x93, 0x74, 0x64, 0x89, 0x44, 0x32, 0x3E, 0xD5, 0x72, 0x6C, 
  0xA1, 0x02, 0x03, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
]


private_key_der =[
  0x30, 0x82, 0x09, 0x28, 0x02, 0x01, 0x00, 0x02, 0x82, 0x02, 
  0x01, 0x00, 0xA8, 0x0B, 0x67, 0x40, 0x05, 0xEA, 0x7D, 0xAA, 
  0x39, 0xB7, 0x49, 0x2C, 0x42, 0xB9, 0x2C, 0x00, 0x86, 0xD9, 
  0x86, 0x40, 0x1F, 0xB5, 0x5B, 0xEC, 0x5A, 0xEA, 0x00, 0x2D, 
  0x58, 0xED, 0xEC, 0x17, 0xC8, 0xB4, 0x25, 0x37, 0xE7, 0x64, 
  0x66, 0xA4, 0x80, 0x09, 0xFF, 0x77, 0x24, 0x2E, 0x35, 0x53, 
  0x5A, 0xA3, 0xE1, 0xFE, 0xC4, 0x84, 0x70, 0x85, 0x86, 0xD6, 
  0x7E, 0x8C, 0xE0, 0x93, 0x32, 0xDC, 0xFB, 0x6A, 0xC6, 0x0E, 
  0x66, 0xEC, 0x55, 0xA4, 0xF9, 0x16, 0x07, 0xAA, 0xEB, 0x25, 
  0x19, 0x50, 0x02, 0xEF, 0x3A, 0x71, 0x60, 0xB5, 0xF6, 0x90, 
  0x79, 0xB9, 0x66, 0xDB, 0x77, 0xE2, 0x72, 0x5D, 0x2F, 0xDF, 
  0xF1, 0x1E, 0x80, 0xBB, 0x27, 0xAD, 0x2A, 0xA2, 0x1D, 0xDD, 
  0x33, 0xB9, 0xA6, 0x4A, 0x21, 0x13, 0x47, 0x00, 0xFF, 0x4A, 
  0xEC, 0x10, 0x07, 0xD1, 0x22, 0xF3, 0xE0, 0x93, 0x6F, 0x1A, 
  0xC4, 0xF5, 0x23, 0xDA, 0x3F, 0x90, 0x41, 0x99, 0x53, 0x5A, 
  0x2B, 0xB5, 0x65, 0x2B, 0x29, 0x14, 0x13, 0x60, 0x94, 0x46, 
  0x55, 0x13, 0x84, 0x48, 0x47, 0x52, 0xF2, 0x04, 0xE9, 0x0A, 
  0xDD, 0x3E, 0x23, 0x4A, 0xFE, 0xCA, 0x6B, 0x11, 0xD8, 0x35, 
  0x73, 0x00, 0x78, 0x11, 0xEA, 0x27, 0x07, 0x20, 0x86, 0x9A, 
  0xE1, 0x61, 0x28, 0x6E, 0x57, 0x20, 0x17, 0x41, 0x49, 0x42, 
  0x56, 0x6C, 0x74, 0x9F, 0xAE, 0xC7, 0x8E, 0xDC, 0xEE, 0x32, 
  0xA0, 0x22, 0x0B, 0x6F, 0xCF, 0xBA, 0x1F, 0x92, 0x45, 0x9F, 
  0x28, 0x7E, 0x31, 0x2E, 0xEF, 0xBD, 0x48, 0x61, 0x32, 0x40, 
  0x7B, 0x80, 0x78, 0xEC, 0x56, 0x97, 0xEB, 0x2B, 0x35, 0x52, 
  0x8C, 0x78, 0xD4, 0x30, 0xFA, 0x3A, 0xA7, 0xA8, 0xC6, 0x4C, 
  0x1B, 0xBA, 0x9F, 0x0E, 0x23, 0x2F, 0x10, 0x0C, 0xFA, 0xD7, 
  0xFB, 0x23, 0xBD, 0x22, 0x52, 0xFC, 0x9A, 0x7F, 0x35, 0x0B, 
  0xB6, 0x01, 0xAC, 0x82, 0xC6, 0x2D, 0x3E, 0x0B, 0x8A, 0x1F, 
  0x2E, 0x1B, 0x33, 0x05, 0xF1, 0xDA, 0xE7, 0xD4, 0xC7, 0xD0, 
  0x21, 0x03, 0xC8, 0xB7, 0x56, 0x61, 0x22, 0xD0, 0x75, 0xA8, 
  0x0B, 0xCD, 0xE7, 0x78, 0x5A, 0xC3, 0x87, 0x67, 0xFE, 0x8D, 
  0x73, 0x57, 0xE5, 0x87, 0x66, 0x3B, 0xB9, 0xEA, 0xBE, 0xB4, 
  0x71, 0x67, 0x20, 0x8E, 0xBC, 0x17, 0x92, 0x0F, 0x7C, 0x96, 
  0xF3, 0xDF, 0x6C, 0x09, 0xF7, 0x97, 0x09, 0xF8, 0xB4, 0x9D, 
  0xA0, 0x4E, 0x1C, 0xD8, 0x1B, 0x49, 0x1B, 0x91, 0x04, 0xA6, 
  0xE5, 0x7C, 0x6A, 0x73, 0x48, 0xB7, 0xE4, 0x23, 0x6B, 0x7C, 
  0xDC, 0x88, 0x5A, 0x89, 0xC1, 0xE9, 0x13, 0xB4, 0x01, 0xD1, 
  0xFE, 0x41, 0x06, 0x87, 0x9E, 0x77, 0xC1, 0x66, 0xB1, 0x69, 
  0x9B, 0xB9, 0x07, 0xE4, 0x5B, 0xB8, 0x11, 0x72, 0x9C, 0x93, 
  0xE1, 0x80, 0x48, 0x8E, 0xDE, 0x07, 0x59, 0xE3, 0x71, 0x2E, 
  0xE8, 0x90, 0xBF, 0xD0, 0xA0, 0x09, 0x82, 0x1B, 0x99, 0x97, 
  0xE4, 0x79, 0x92, 0x75, 0xE1, 0x6F, 0x52, 0x56, 0xB8, 0xBF, 
  0xE4, 0x63, 0x6B, 0xE9, 0xB4, 0x0D, 0xDA, 0xED, 0x58, 0xF2, 
  0xDC, 0xB8, 0x7B, 0x05, 0x97, 0xDC, 0xC1, 0x90, 0x9A, 0x85, 
  0xC2, 0xDB, 0x79, 0xC1, 0xC0, 0xF1, 0x9B, 0xE1, 0x06, 0x82, 
  0x6E, 0x8A, 0xBC, 0x03, 0x0E, 0xFC, 0x5F, 0x6B, 0xDE, 0xE1, 
  0xCC, 0x44, 0xFF, 0xA3, 0xD7, 0xE6, 0x4B, 0x0C, 0x94, 0x3A, 
  0x6A, 0x6A, 0x5C, 0x44, 0xB7, 0x05, 0x7C, 0x1E, 0xE6, 0x22, 
  0x7A, 0x6E, 0x69, 0xA7, 0x23, 0x8F, 0x9A, 0x48, 0x0C, 0x90, 
  0xF3, 0x4A, 0xE0, 0x72, 0x80, 0x54, 0xAE, 0xE7, 0x78, 0xA1, 
  0x7A, 0x7D, 0x00, 0x7B, 0x1B, 0xBF, 0x02, 0x18, 0x33, 0xDF, 
  0x07, 0xBD, 0x41, 0x33, 0x47, 0xBB, 0x2E, 0x7A, 0x4A, 0xFF, 
  0xE7, 0x55, 0xF9, 0x8D, 0x02, 0x03, 0x01, 0x00, 0x01, 0x02, 
  0x82, 0x02, 0x00, 0x0B, 0xCA, 0xD9, 0x11, 0x06, 0x19, 0x41, 
  0x7E, 0x4B, 0x94, 0x90, 0x1E, 0xFA, 0x03, 0xB2, 0x91, 0xCA, 
  0xE4, 0xC2, 0xE6, 0x07, 0x13, 0x9C, 0x02, 0xC7, 0x12, 0x7A, 
  0xB6, 0xB3, 0xF1, 0xE6, 0x4A, 0x78, 0xFC, 0x23, 0x4C, 0x7C, 
  0x01, 0x70, 0xAE, 0x84, 0x89, 0xAF, 0x12, 0xB6, 0x48, 0x43, 
  0xD7, 0xB8, 0x99, 0x9D, 0x87, 0x5A, 0x55, 0x0C, 0xEC, 0x61, 
  0xDC, 0xF5, 0x7E, 0x7F, 0x57, 0xF5, 0x0E, 0xCA, 0xD9, 0xE0, 
  0x52, 0x2C, 0x68, 0xD3, 0x4D, 0xC3, 0x69, 0x07, 0x5A, 0xB8, 
  0x2B, 0x9F, 0x4E, 0x1D, 0x16, 0x9A, 0x9C, 0x50, 0x34, 0x14, 
  0xBC, 0x68, 0xBE, 0x58, 0xF8, 0x77, 0xBE, 0x3D, 0x56, 0x4A, 
  0xC0, 0xC5, 0x53, 0xE5, 0xA6, 0xBC, 0x8F, 0x0B, 0x59, 0xDB, 
  0x0C, 0xA5, 0xCF, 0x96, 0x5A, 0xC7, 0x5D, 0x69, 0xF3, 0x28, 
  0xF7, 0x21, 0xFF, 0xB1, 0xFC, 0xBC, 0x1E, 0x2F, 0x19, 0x49, 
  0x87, 0xB0, 0x60, 0x9F, 0x86, 0x76, 0x45, 0x72, 0x45, 0x07, 
  0x33, 0x61, 0xB3, 0xD6, 0x08, 0xA4, 0x56, 0x53, 0x51, 0xC8, 
  0xB5, 0xF2, 0xCC, 0x6E, 0xD0, 0xFF, 0xA8, 0x53, 0x71, 0x82, 
  0xC5, 0x0F, 0x67, 0x87, 0xE4, 0x80, 0x62, 0xC6, 0x06, 0xB7, 
  0x8C, 0x70, 0xA8, 0x8C, 0xC4, 0x7D, 0x11, 0x06, 0x10, 0x03, 
  0x42, 0x25, 0x24, 0xC3, 0x48, 0x92, 0xF6, 0x9E, 0x8B, 0x27, 
  0x4F, 0xEF, 0x6E, 0xA6, 0xF4, 0x79, 0xB8, 0x69, 0x4F, 0x19, 
  0xAC, 0x15, 0xCE, 0xAD, 0xCC, 0xC7, 0xE0, 0x00, 0xCD, 0x2B, 
  0xF3, 0x92, 0x4C, 0xE0, 0xB8, 0xB1, 0x7C, 0x2F, 0xF3, 0x1A, 
  0x2A, 0xAA, 0x40, 0x06, 0xBC, 0x57, 0x0B, 0x4C, 0x26, 0x79, 
  0x14, 0x74, 0xE5, 0x19, 0xC6, 0xE2, 0x18, 0x71, 0xA1, 0x87, 
  0x60, 0xD9, 0xE5, 0x4B, 0xBA, 0x1B, 0x3F, 0xF7, 0x39, 0x61, 
  0xF4, 0xFC, 0x1B, 0xB2, 0xEF, 0x10, 0xB1, 0xC7, 0x49, 0x9E, 
  0xCD, 0xF4, 0xB3, 0xD0, 0x09, 0x89, 0x07, 0x3F, 0x07, 0xC3, 
  0x0A, 0xB1, 0xAF, 0xDE, 0x77, 0x38, 0x3A, 0xD5, 0x39, 0x43, 
  0x50, 0x3D, 0x82, 0x88, 0x7F, 0x0E, 0x78, 0x91, 0xD4, 0x2B, 
  0xED, 0xD1, 0x2C, 0xDC, 0x13, 0x38, 0xEB, 0x77, 0xDF, 0xB3, 
  0xCB, 0x69, 0x51, 0x6C, 0xCD, 0x14, 0xAF, 0x57, 0xE7, 0xD4, 
  0x03, 0x14, 0xD7, 0xD3, 0xDC, 0x79, 0xB1, 0x43, 0x29, 0xA6, 
  0x35, 0x79, 0xD1, 0xF7, 0x23, 0x5E, 0xCA, 0x89, 0x04, 0x81, 
  0x91, 0xF3, 0xE0, 0xEF, 0x75, 0x19, 0xC2, 0xBB, 0xA9, 0x0B, 
  0x5A, 0x63, 0x9B, 0x56, 0xD6, 0x63, 0xDF, 0x09, 0xA6, 0x68, 
  0xFE, 0x34, 0xA6, 0x73, 0xA9, 0x83, 0x44, 0x0B, 0x91, 0xA6, 
  0xE8, 0xF3, 0x51, 0xA5, 0x95, 0x23, 0x0F, 0xEE, 0x73, 0x7B, 
  0x22, 0x28, 0x48, 0x5C, 0x4D, 0x12, 0x4C, 0xDB, 0xB4, 0x77, 
  0x0D, 0xAF, 0x4D, 0x83, 0x7B, 0x1A, 0xD1, 0x73, 0xCD, 0x01, 
  0xEC, 0x2D, 0x8F, 0x45, 0x0A, 0x33, 0x90, 0x21, 0xFE, 0x6D, 
  0xC8, 0xCB, 0x39, 0xB6, 0xD7, 0x88, 0x53, 0x8B, 0xA3, 0x01, 
  0x78, 0x2D, 0xEB, 0x6C, 0x3A, 0x69, 0x46, 0x5B, 0x5C, 0x50, 
  0x96, 0xC3, 0x3D, 0x15, 0x60, 0xAF, 0xA3, 0xA9, 0x6B, 0x2D, 
  0x24, 0xA3, 0x4B, 0xB9, 0xE0, 0xA7, 0xA9, 0x44, 0x43, 0x6E, 
  0x89, 0xD4, 0x1C, 0x11, 0x48, 0x80, 0x4D, 0x2A, 0xDF, 0x02, 
  0x21, 0xBA, 0xAB, 0x2C, 0xE1, 0xA4, 0x1B, 0xC7, 0x40, 0x93, 
  0x5E, 0xDE, 0x59, 0xE0, 0x61, 0xBA, 0x09, 0xC1, 0x72, 0x96, 
  0x94, 0xBE, 0xF2, 0xE1, 0x04, 0xD8, 0x84, 0xF3, 0xFC, 0xB3, 
  0x2C, 0xA9, 0x3C, 0x3F, 0xD3, 0x68, 0xA2, 0x91, 0xFA, 0x8A, 
  0xC4, 0x36, 0x50, 0x43, 0x45, 0x19, 0x27, 0x90, 0x29, 0x6C, 
  0x63, 0x13, 0x73, 0x37, 0x29, 0x43, 0x95, 0x58, 0xB8, 0xD0, 
  0xE9, 0xC3, 0x51, 0xD3, 0x05, 0x02, 0x82, 0x01, 0x01, 0x00, 
  0xC3, 0x03, 0x0D, 0xDA, 0x69, 0x09, 0x94, 0x4C, 0xD8, 0x99, 
  0x8E, 0xC5, 0xC7, 0x00, 0x19, 0x75, 0x2F, 0xCD, 0x7B, 0xC0, 
  0x85, 0xBF, 0x0F, 0x06, 0x6E, 0x1D, 0x44, 0x08, 0xC4, 0xA3, 
  0x4D, 0x45, 0xF8, 0x86, 0x39, 0x4E, 0xA1, 0xFD, 0xEF, 0xEF, 
  0xDB, 0xFD, 0x25, 0x7B, 0x18, 0x27, 0xAC, 0x62, 0x7A, 0x39, 
  0x97, 0x41, 0x82, 0x6D, 0x56, 0xAE, 0x66, 0xA5, 0x60, 0x8D, 
  0x36, 0xFB, 0x4A, 0x2C, 0x3B, 0x40, 0x51, 0x26, 0x93, 0x48, 
  0x97, 0x25, 0x2F, 0xF2, 0x8F, 0xD8, 0x22, 0x4D, 0x50, 0x5E, 
  0xFA, 0xA5, 0x33, 0x8D, 0x24, 0x66, 0xF0, 0x13, 0x85, 0x60, 
  0x62, 0x16, 0xCE, 0xEC, 0xA3, 0x8E, 0xF0, 0x51, 0x35, 0xCE, 
  0x79, 0x58, 0xC8, 0xFF, 0xD4, 0x99, 0x68, 0x14, 0xE4, 0x21, 
  0xE9, 0x55, 0x68, 0xAE, 0x79, 0x0E, 0x7F, 0xD5, 0x11, 0xC4, 
  0x3A, 0xFE, 0xBB, 0x3F, 0x55, 0x5E, 0x74, 0x9D, 0xA8, 0x08, 
  0x7F, 0x35, 0xA6, 0xEE, 0xD5, 0x20, 0xAB, 0x05, 0xB2, 0x9A, 
  0xB8, 0x95, 0x54, 0xD4, 0x53, 0x49, 0x23, 0xE7, 0xA9, 0x6F, 
  0xF5, 0x31, 0x93, 0x19, 0x1F, 0x72, 0x33, 0xEB, 0x6A, 0xF5, 
  0x27, 0x79, 0x33, 0x2F, 0x3A, 0x7B, 0xA8, 0x11, 0x01, 0xA6, 
  0xBE, 0x71, 0x8A, 0x04, 0xEC, 0x12, 0x23, 0xCD, 0xCF, 0x52, 
  0xAB, 0x3B, 0x34, 0x43, 0xBE, 0x39, 0x5B, 0x9E, 0xB3, 0x7C, 
  0xC2, 0xE8, 0x1E, 0x7C, 0x64, 0x97, 0xBC, 0x89, 0xA6, 0x12, 
  0x90, 0xAD, 0x95, 0xC1, 0xFD, 0x76, 0x4C, 0xAF, 0x86, 0x5F, 
  0xB6, 0x60, 0xDE, 0x7F, 0x3E, 0x7C, 0x5C, 0xB4, 0x27, 0x76, 
  0x46, 0x30, 0xB2, 0xD7, 0x4E, 0x95, 0xB8, 0xC2, 0xDE, 0xDC, 
  0x02, 0x80, 0x21, 0x13, 0xB9, 0xCD, 0x1A, 0x17, 0xFB, 0x80, 
  0xF9, 0x93, 0x4E, 0xEC, 0xE4, 0x87, 0xB5, 0xC9, 0xFC, 0x40, 
  0x5C, 0x38, 0xE0, 0xDA, 0x12, 0xB3, 0x02, 0x82, 0x01, 0x01, 
  0x00, 0xDC, 0x99, 0x4C, 0xD2, 0x39, 0x19, 0xBA, 0x19, 0x64, 
  0xAA, 0x5D, 0xA0, 0x80, 0x4A, 0x59, 0xAF, 0x8E, 0xAB, 0xDF, 
  0x85, 0x81, 0x45, 0xF6, 0x0F, 0x0E, 0x07, 0xD7, 0xEB, 0x23, 
  0x4C, 0x49, 0x9D, 0x84, 0xDA, 0x65, 0xBD, 0x3B, 0x7D, 0x20, 
  0xD6, 0xD6, 0xA1, 0x9C, 0x06, 0x35, 0xB7, 0x5E, 0xC2, 0x1D, 
  0x81, 0x2D, 0x13, 0x7A, 0x32, 0x78, 0xA5, 0x2F, 0xFF, 0xA4, 
  0xF6, 0x24, 0xED, 0x19, 0x1D, 0x82, 0xFC, 0x32, 0x7E, 0xF2, 
  0x6D, 0x65, 0x87, 0xB8, 0xBA, 0x37, 0x8D, 0xA0, 0x43, 0x93, 
  0xC4, 0x28, 0x35, 0x4C, 0x4E, 0x8B, 0xCF, 0x85, 0x7B, 0xD1, 
  0x4B, 0x44, 0x5E, 0x55, 0xEF, 0x6A, 0x9C, 0x3F, 0xC7, 0x06, 
  0x0C, 0x23, 0x2F, 0xC6, 0x2B, 0xD3, 0x50, 0x33, 0x8B, 0x22, 
  0xFE, 0x38, 0xEE, 0x36, 0x93, 0x2E, 0x66, 0x9B, 0xB5, 0xB0, 
  0x10, 0x32, 0x5E, 0xF7, 0xDF, 0xD3, 0xED, 0x51, 0xD5, 0xFB, 
  0xA3, 0xF6, 0xDC, 0x9E, 0x3B, 0xA0, 0xCB, 0x6B, 0xF3, 0x6A, 
  0x0D, 0x46, 0xCE, 0xBC, 0xB4, 0x8C, 0xFA, 0xCC, 0xD5, 0x50, 
  0x40, 0xD2, 0xA1, 0x71, 0xC3, 0xBF, 0xFA, 0xBA, 0x98, 0x4C, 
  0x87, 0x96, 0x55, 0xA8, 0x35, 0x71, 0x6C, 0xC4, 0x86, 0x80, 
  0x05, 0x1A, 0x99, 0xAE, 0x36, 0xBB, 0x4F, 0x3A, 0x9E, 0x52, 
  0x00, 0x08, 0xB6, 0xAF, 0xE6, 0xD6, 0x58, 0x8E, 0xEC, 0x9B, 
  0x9D, 0x56, 0x9A, 0xBA, 0x08, 0xFA, 0x85, 0x91, 0x1F, 0xC8, 
  0x86, 0xC1, 0x0F, 0xEF, 0x80, 0x87, 0x93, 0x1C, 0x0B, 0x82, 
  0x80, 0xAC, 0x89, 0x78, 0x54, 0x7A, 0xBA, 0x06, 0xD3, 0xA0, 
  0x98, 0x43, 0xC4, 0x7A, 0xF5, 0xA7, 0x5E, 0x2C, 0x60, 0xF6, 
  0x00, 0x66, 0x00, 0x55, 0xFD, 0x41, 0x42, 0x9B, 0x3F, 0xC0, 
  0x3B, 0x59, 0xE2, 0xA3, 0x08, 0x70, 0x03, 0xC1, 0xAB, 0x0A, 
  0xCE, 0x93, 0x9F, 0x6F, 0x60, 0xE2, 0xBF, 0x02, 0x82, 0x01, 
  0x00, 0x4E, 0x7E, 0x4D, 0x36, 0x2B, 0x6F, 0x32, 0xA5, 0x17, 
  0xCD, 0xFF, 0x3C, 0xB6, 0x53, 0xE0, 0xEB, 0x5D, 0x59, 0x5D, 
  0x45, 0x69, 0xD0, 0x34, 0x71, 0x07, 0x23, 0x7A, 0x7D, 0xF9, 
  0x00, 0x2E, 0x1B, 0x4A, 0xE4, 0x63, 0xEE, 0xB5, 0x9F, 0x6B, 
  0xD3, 0x64, 0xFD, 0xE8, 0xF7, 0x3A, 0x0A, 0xC6, 0x05, 0x41, 
  0x63, 0x2A, 0xF1, 0xB0, 0x58, 0xE8, 0x39, 0xFC, 0x90, 0xF6, 
  0x63, 0x00, 0xCD, 0x76, 0xD6, 0x84, 0xE6, 0xE7, 0x83, 0x1A, 
  0x67, 0x6E, 0x87, 0x06, 0x5C, 0xA0, 0xEF, 0x83, 0x27, 0x11, 
  0x81, 0x99, 0x6B, 0xA3, 0x6B, 0x5D, 0x4A, 0x9D, 0xB9, 0x8D, 
  0xC6, 0xF4, 0xD4, 0x6F, 0x67, 0xAA, 0x91, 0xDF, 0x43, 0x20, 
  0xE0, 0x41, 0xD1, 0xAD, 0xDD, 0xE3, 0xA9, 0xF7, 0xCD, 0xE8, 
  0xE1, 0x89, 0x74, 0xDA, 0x54, 0xD7, 0xDF, 0x31, 0x2F, 0x07, 
  0x1E, 0xB0, 0x0C, 0x56, 0x3C, 0x30, 0xD5, 0x7B, 0x24, 0xF6, 
  0x3C, 0xAD, 0x4F, 0x60, 0x28, 0xE3, 0xDA, 0x69, 0x5C, 0x3A, 
  0xBE, 0xB2, 0x2B, 0x51, 0x60, 0xC1, 0x41, 0x40, 0x55, 0x7F, 
  0xCA, 0xD3, 0xAB, 0xA7, 0xA4, 0xC6, 0x16, 0x86, 0xB5, 0x6C, 
  0x70, 0xCE, 0xF9, 0xA6, 0xD3, 0x8C, 0xBB, 0xB7, 0x33, 0x59, 
  0x31, 0xCF, 0x98, 0x0D, 0xD0, 0xDB, 0x60, 0x95, 0xCE, 0xC2, 
  0x73, 0x68, 0xFE, 0xC4, 0x93, 0xBB, 0xDE, 0x84, 0x75, 0x45, 
  0x93, 0xA3, 0x34, 0x21, 0x09, 0x3A, 0xC8, 0x24, 0x98, 0x57, 
  0x23, 0x43, 0xDE, 0xCA, 0xD7, 0xB1, 0x78, 0xCB, 0x77, 0x1F, 
  0x24, 0x29, 0x59, 0xA6, 0x55, 0x1B, 0x46, 0x9D, 0x5D, 0xDA, 
  0x40, 0x6E, 0x12, 0x2D, 0xFA, 0x21, 0xE4, 0x7B, 0xE0, 0xDC, 
  0x29, 0x3C, 0x4C, 0x6C, 0x83, 0xEF, 0x16, 0x92, 0x39, 0x32, 
  0xFF, 0x7F, 0xF5, 0x7E, 0x20, 0x36, 0x00, 0x35, 0xF8, 0xDE, 
  0x32, 0xDD, 0xAB, 0xFB, 0x3D, 0x6B, 0xA7, 0x02, 0x82, 0x01, 
  0x00, 0x23, 0x5F, 0x9D, 0xB6, 0xF4, 0x1B, 0x11, 0x01, 0x73, 
  0x67, 0xF2, 0x3D, 0x83, 0x74, 0xE8, 0xAE, 0xC3, 0x15, 0x02, 
  0x71, 0xB9, 0x0A, 0x0B, 0xEB, 0xDC, 0x17, 0x1B, 0xE3, 0x83, 
  0xB4, 0x7E, 0xF5, 0x78, 0x51, 0x41, 0x11, 0x38, 0x11, 0xD7, 
  0x8B, 0x3B, 0xBD, 0x8C, 0x74, 0x5E, 0x76, 0xBA, 0x06, 0x2C, 
  0x8F, 0x03, 0x38, 0x65, 0x56, 0xE4, 0x8B, 0xB0, 0x87, 0xB0, 
  0xDF, 0x1B, 0x8A, 0xBD, 0x85, 0x42, 0xF4, 0xC7, 0xF0, 0x1D, 
  0x55, 0xB7, 0x7B, 0x2C, 0xFF, 0x07, 0x5B, 0x79, 0x80, 0x7C, 
  0x98, 0x6E, 0xCE, 0x25, 0x1F, 0x4F, 0x42, 0x06, 0xA8, 0x95, 
  0x26, 0x19, 0x9F, 0x7A, 0xEE, 0x3A, 0x4D, 0x35, 0xD8, 0xE7, 
  0x3A, 0x59, 0x06, 0x17, 0x23, 0xFD, 0xED, 0x95, 0x66, 0x51, 
  0x45, 0x2C, 0xC1, 0xDE, 0x14, 0x79, 0xD3, 0x50, 0x52, 0xB1, 
  0x19, 0xD7, 0xC9, 0xEC, 0xBB, 0x82, 0x93, 0x42, 0x95, 0x2A, 
  0x95, 0xDF, 0x46, 0xFF, 0x44, 0x96, 0x83, 0x28, 0x1B, 0x4F, 
  0x3D, 0x33, 0xC6, 0x80, 0xF1, 0xFE, 0xCD, 0x54, 0xBD, 0x3B, 
  0xF2, 0x39, 0x14, 0x54, 0x56, 0xCC, 0x59, 0x1B, 0x44, 0xC2, 
  0xB8, 0xD7, 0x3D, 0x83, 0x0C, 0x96, 0xD4, 0x97, 0x2A, 0xEE, 
  0x2A, 0x63, 0x5A, 0x93, 0x5A, 0x09, 0x6D, 0x29, 0xFC, 0x2B, 
  0x30, 0x00, 0x35, 0xB3, 0x3D, 0x33, 0xCF, 0xDD, 0x93, 0x49, 
  0x5C, 0xD0, 0x7F, 0x5D, 0x27, 0x85, 0x6C, 0x97, 0x99, 0xDE, 
  0x20, 0xE5, 0xA2, 0x75, 0x88, 0x49, 0xB5, 0x28, 0x41, 0x1C, 
  0x3B, 0x1F, 0xEF, 0xA7, 0x50, 0xFC, 0xA1, 0x09, 0xE9, 0x33, 
  0x8E, 0x57, 0x07, 0x91, 0xA4, 0x04, 0xA3, 0x90, 0x40, 0x38, 
  0x12, 0x56, 0x48, 0xE5, 0x81, 0x07, 0xCE, 0xF3, 0x70, 0x24, 
  0x96, 0x1F, 0xD2, 0xBC, 0xCB, 0xE4, 0x92, 0x65, 0xA2, 0xD4, 
  0xC7, 0xCD, 0x5A, 0x3A, 0x94, 0xF1, 0xA7, 0x02, 0x82, 0x01, 
  0x01, 0x00, 0xBA, 0x2C, 0xD3, 0xCA, 0xE1, 0xA7, 0x4C, 0x7F, 
  0xEA, 0x66, 0x38, 0x7A, 0x51, 0x4D, 0xCF, 0x5C, 0x73, 0x9E, 
  0x40, 0x55, 0x50, 0x48, 0xA0, 0x67, 0xB9, 0x5F, 0x31, 0x62, 
  0xBC, 0x07, 0x6D, 0x81, 0x9F, 0x3B, 0xC3, 0x3D, 0x9E, 0x78, 
  0x85, 0x37, 0x55, 0x58, 0x06, 0x78, 0xB3, 0xDF, 0xCB, 0xB7, 
  0x13, 0x34, 0x03, 0x5C, 0x27, 0x32, 0x75, 0x5A, 0xD0, 0x1E, 
  0xEA, 0x95, 0x42, 0xA5, 0x0E, 0xBB, 0x4E, 0x43, 0x63, 0x3B, 
  0x94, 0x74, 0xBF, 0xDB, 0x05, 0x34, 0x3E, 0x52, 0xAE, 0xC9, 
  0x1A, 0x42, 0xD3, 0x31, 0xF9, 0x2C, 0x6A, 0x1B, 0xCE, 0xB0, 
  0xB2, 0x2D, 0xF2, 0x6E, 0x97, 0x1B, 0xA8, 0x87, 0xF7, 0x15, 
  0x87, 0xB8, 0x16, 0xA9, 0x75, 0xA5, 0xCF, 0xD8, 0xD3, 0xB1, 
  0xE8, 0xE9, 0x5F, 0x1E, 0x77, 0x64, 0xBE, 0x1E, 0x16, 0x74, 
  0xDA, 0xF5, 0x8B, 0x28, 0xB1, 0x60, 0x4D, 0x66, 0x48, 0x3E, 
  0x26, 0x40, 0x7B, 0x3E, 0x63, 0x44, 0xF5, 0xF8, 0xC0, 0x65, 
  0x0C, 0x48, 0xD2, 0x8D, 0xB8, 0x60, 0xF2, 0x8F, 0xAB, 0x0E, 
  0xBD, 0x7A, 0x9B, 0x3E, 0x33, 0x29, 0x01, 0x8C, 0x2B, 0x25, 
  0xEC, 0x0B, 0x2D, 0x58, 0x2A, 0xB2, 0xD1, 0xE1, 0x4C, 0x1F, 
  0x56, 0x1F, 0xF1, 0x52, 0xD5, 0x61, 0x4C, 0x1F, 0x3D, 0x62, 
  0x9B, 0xA2, 0x83, 0x95, 0x44, 0x77, 0x05, 0x7C, 0x6B, 0x0B, 
  0x17, 0xD1, 0x72, 0x8F, 0x9F, 0xA1, 0x14, 0xE0, 0x5E, 0x9D, 
  0xE3, 0xEA, 0xA8, 0x11, 0x9A, 0xC9, 0x92, 0x72, 0x0E, 0xB5, 
  0x5D, 0x7A, 0xE0, 0x5D, 0x1A, 0x9A, 0x15, 0x15, 0x6F, 0xD0, 
  0x72, 0x60, 0xFF, 0x2B, 0x08, 0xC2, 0xE3, 0xA3, 0x2C, 0x3F, 
  0x40, 0x72, 0xFC, 0xBF, 0x15, 0x7A, 0x9D, 0x55, 0xA9, 0x8B, 
  0xDF, 0x7A, 0x7B, 0x8F, 0x4D, 0xDB, 0xEF, 0x56, 0x70, 0xA8, 
  0xA7, 0xD2, 0x7B, 0x8C, 0x93, 0x8A, 0x32, 0x59, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
]

from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives.asymmetric import rsa
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.primitives.asymmetric import padding
from cryptography.hazmat.primitives import hashes
import os

class RC4:
    def __init__(self, key):
        self.state = list(range(256))  # Initialize state array
        j = 0
        # Key-scheduling algorithm (KSA)
        for i in range(256):
            j = (j + self.state[i] + key[i % len(key)]) % 256
            self.state[i], self.state[j] = self.state[j], self.state[i]
        self.i = self.j = 0

    def encrypt(self, plaintext):
        return bytes([b ^ self._key_stream_value() for b in plaintext])

    def decrypt(self, ciphertext):
        return self.encrypt(ciphertext)  # For RC4, encryption and decryption are the same

    def _key_stream_value(self):
        # Pseudo-random generation algorithm (PRGA)
        self.i = (self.i + 1) % 256
        self.j = (self.j + self.state[self.i]) % 256
        self.state[self.i], self.state[self.j] = self.state[self.j], self.state[self.i]
        return self.state[(self.state[self.i] + self.state[self.j]) % 256]

def rsa_decrypt_with_predefined_key(encrypted_message, predefined_private_key_pem):
    predefined_private_key = serialization.load_pem_private_key(
        predefined_private_key_pem,
        password=None, 
        backend=default_backend()
    )
    
    original_message = predefined_private_key.decrypt(
        encrypted_message,
        padding.OAEP(
            mgf=padding.MGF1(algorithm=hashes.SHA256()),
            algorithm=hashes.SHA256(),
            label=None
        )
    )
    
    return original_message

def rsa_encrypt(public_key_pem, message):
    public_key = public_key_pem
    encrypted = public_key.encrypt(
        message,
        padding.OAEP(
            mgf=padding.MGF1(algorithm=hashes.SHA256()),
            algorithm=hashes.SHA256(),
            label=None
        )
    )
    return encrypted

def rsa_decrypt(private_key_pem, encrypted_message):
    private_key = private_key_pem
    original_message = private_key.decrypt(
        encrypted_message,
        padding.OAEP(
            mgf=padding.MGF1(algorithm=hashes.SHA256()),
            algorithm=hashes.SHA256(),
            label=None
        )
    )
    return original_message

def parse_pkcs1_public_key(pkcs1_public_key_bytes):
    public_key = serialization.load_der_public_key(
        pkcs1_public_key_bytes,
        backend=default_backend()
    )
    return public_key

def parse_pkcs1_private_key(pkcs1_private_key_bytes):
    private_key = serialization.load_der_private_key(
        pkcs1_private_key_bytes,
        password=None,
        backend=default_backend()
    )
    return private_key

rc4_key = os.urandom(32)

print("RC4 KEY : ")
print(rc4_key)

public_key = parse_pkcs1_public_key(bytes(public_key_der))

ret = rsa_encrypt(public_key, rc4_key)

print("Encrypted RC4 KEY : ")
print(ret)

private_key = parse_pkcs1_private_key(bytes(private_key_der))
decrypt_ret = rsa_decrypt(private_key, ret)
print("Decrypted RC4 KEY : ")
print(decrypt_ret)

